data("DHIimages")
drugImg = DHIimages[[2]]
image(drugImg)
maskImg = DHIimages[[1]]
image(maskImg)
table(maskImg)
maskImg[maskImg !=0] =1
image(maskImg)
table(maskImg)
CalculateDHI <- function(drugImg,maskImg,QuantLevel=0,Nu=1)
{
if(dim(drugImg) != dim(maskImg) stop("dimensions of drug and mask image matrices are different")
if(QuantLevel !=0)
{
m = QuantLevel/max(Img_drug)
Img_drug = Img_drug*m
}
Img_drug = mask * Img_drug
szm = glszm(Img_drug)
szm = szm@.Data
szm = szm[-1,]   ### Removing sz values for the background of image
szm = szm[,-as.numeric(which(colSums(szm) ==0 ))]
szv = as.numeric(colnames(szm))
id = which(szv >= Nu)
DrugHomo = 0
for(j in 1:length(id))
{
DrugHomo = DrugHomo + (szv[id[j]]) * sum(szm[,id[j]])
}
DrugHomo = DrugHomo/sum(szm[,id])
TumorArea = table(mask)[[2]]
DrugHomo = DrugHomo/TumorArea
return(DrugHomo)
}
CalculateDHI <- function(drugImg,maskImg,QuantLevel=0,Nu=1)
{
if(dim(drugImg) != dim(maskImg))
{stop("dimensions of drug and mask image matrices are different")}
if(QuantLevel !=0)
{
m = QuantLevel/max(Img_drug)
Img_drug = Img_drug*m
}
Img_drug = mask * Img_drug
szm = glszm(Img_drug)
szm = szm@.Data
szm = szm[-1,]   ### Removing sz values for the background of image
szm = szm[,-as.numeric(which(colSums(szm) ==0 ))]
szv = as.numeric(colnames(szm))
id = which(szv >= Nu)
DrugHomo = 0
for(j in 1:length(id))
{
DrugHomo = DrugHomo + (szv[id[j]]) * sum(szm[,id[j]])
}
DrugHomo = DrugHomo/sum(szm[,id])
TumorArea = table(mask)[[2]]
DrugHomo = DrugHomo/TumorArea
return(DrugHomo)
}
print(CalculateDHI(drugImg,maskImg))
dim(drugImg)
dim(maskImg)
CalculateDHI <- function(drugImg,maskImg,QuantLevel=0,Nu=1)
{
if(dim(drugImg) != dim(maskImg)) stop("dimensions of drug and mask image matrices are different")
if(QuantLevel !=0)
{
m = QuantLevel/max(Img_drug)
Img_drug = Img_drug*m
}
Img_drug = maskImg * Img_drug
szm = glszm(Img_drug)
szm = szm@.Data
szm = szm[-1,]   ### Removing sz values for the background of image
szm = szm[,-as.numeric(which(colSums(szm) ==0 ))]
szv = as.numeric(colnames(szm))
id = which(szv >= Nu)
DrugHomo = 0
for(j in 1:length(id))
{
DrugHomo = DrugHomo + (szv[id[j]]) * sum(szm[,id[j]])
}
DrugHomo = DrugHomo/sum(szm[,id])
TumorArea = table(maskImg)[[2]]
DrugHomo = DrugHomo/TumorArea
return(DrugHomo)
}
print(CalculateDHI(drugImg,maskImg))
CalculateDHI <- function(drugImg,maskImg,QuantLevel=0,Nu=1)
{
if(dim(drugImg) != dim(maskImg)) stop("dimensions of drug and mask image matrices are different")
if(QuantLevel !=0)
{
m = QuantLevel/max(drugImg)
drugImg = drugImg*m
}
drugImg= maskImg * drugImg
szm = glszm(drugImg)
szm = szm@.Data
szm = szm[-1,]   ### Removing sz values for the background of image
szm = szm[,-as.numeric(which(colSums(szm) ==0 ))]
szv = as.numeric(colnames(szm))
id = which(szv >= Nu)
DrugHomo = 0
for(j in 1:length(id))
{
DrugHomo = DrugHomo + (szv[id[j]]) * sum(szm[,id[j]])
}
DrugHomo = DrugHomo/sum(szm[,id])
TumorArea = table(maskImg)[[2]]
DrugHomo = DrugHomo/TumorArea
return(DrugHomo)
}
print(CalculateDHI(drugImg,maskImg))
library(radiomics)
print(CalculateDHI(drugImg,maskImg))
CalculateDHI <- function(drugImg,maskImg,QuantLevel=0,Nu=1)
{
if((dim(drugImg)[1] != dim(maskImg)[1]) | (dim(drugImg)[2] != dim(maskImg)[2]))
{stop("dimensions of drug and mask image matrices are different")}
if(QuantLevel !=0)
{
m = QuantLevel/max(drugImg)
drugImg = drugImg*m
}
drugImg= maskImg * drugImg
szm = glszm(drugImg)
szm = szm@.Data
szm = szm[-1,]   ### Removing sz values for the background of image
szm = szm[,-as.numeric(which(colSums(szm) ==0 ))]
szv = as.numeric(colnames(szm))
id = which(szv >= Nu)
DrugHomo = 0
for(j in 1:length(id))
{
DrugHomo = DrugHomo + (szv[id[j]]) * sum(szm[,id[j]])
}
DrugHomo = DrugHomo/sum(szm[,id])
TumorArea = table(maskImg)[[2]]
DrugHomo = DrugHomo/TumorArea
return(DrugHomo)
}
print(CalculateDHI(drugImg,maskImg))
print(CalculateDHI(drugImg,maskImg,QuantLevel=0,Nu=5))
